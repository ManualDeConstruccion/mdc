FROM python:3.11.0

# Evitar que Python genere archivos .pyc
ENV PYTHONDONTWRITEBYTECODE=1
# Desactivar el buffer para el logging más fácil
ENV PYTHONUNBUFFERED=1

# Configurar el directorio de trabajo en el contenedor
WORKDIR /app

# Instalar dependencias de sistema necesarias para psycopg2-binary
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    gcc \
    postgresql \
    libpq-dev \
    nginx \
    && rm -rf /var/lib/apt/lists/*

# Actualizar pip y instalar Cython
RUN pip install --upgrade pip
RUN pip install --no-cache-dir cython

# Copiar requirements.txt e instalar dependencias
COPY requirements.txt /app/
RUN pip3 install --no-cache-dir -r requirements.txt

# Copiar el código de la aplicación al contenedor
COPY . /app/

# Variable de entorno para apuntar a dev.py
ENV DJANGO_SETTINGS_MODULE=buildguide.settings.staging

# Copiar el archivo entrypoint.staging.sh
COPY entrypoint.staging.sh /app/entrypoint.staging.sh

# Asignar permisos de ejecución al archivo entrypoint
RUN chmod +x /app/entrypoint.staging.sh

# Remove de default nginx site and forward request and error logs to docker log collector
RUN rm  /etc/nginx/sites-enabled/default \
    && ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log

# Copiar el archivo de configuración de nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Exponer el puerto de la aplicación
EXPOSE 8000

# Comando de entrada
ENTRYPOINT ["/app/entrypoint.staging.sh"]